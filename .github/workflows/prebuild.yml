name: Build

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  Android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "cachedir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ${{ steps.npm-cache-dir.outputs.cachedir }}
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: ðŸ“¦ Install dependencies
        shell: bash
        run: npm ci

      - name: prebuild and generate android folder
        run: npx expo prebuild

      - name: Setup Java Env
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'
          cache: gradle      

      - name: Build Packages
        shell: bash
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease 

      # Push tag to GitHub if package.json version's tag is not tagged
      - name: Get package version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV

      - name: Generate file MD5
        run: |
          cd android/app/build/outputs/apk/release
          md5sum *.apk

      - name: Upload Artifact
        uses: ./.github/actions/upload-artifact
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}